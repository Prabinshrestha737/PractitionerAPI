* Django REST Framework API for Practitioners

## Prerequisites

- Python 3+
- Django Framework
- Django Rest Framework
- Postgres Database
- Postman (optional, for testing API endpoints)

## Setup

1. Clone the repository:

git clone https://github.com/Prabinshrestha737/PractitionerAPI


2. Install the dependencies:

pip install -r requirements.txt


3. Set up the environment variables:

- Create a '.env' file in the project root directory.
- Open the '.env' file
- Add the following environment variables and update their values accordingly:

  '''
  SECRET_KEY=<your_secret_key>
  DB_NAME=<your_database_name>
  DB_USER=<your_database_user>
  DB_PASSWORD=<your_database_password>
  DB_HOST=<your_database_host>
  DB_PORT=<your_database_port>
  '''

  you can generate django secret key from django core utils. Open terminal
  
  from django.core.management.utils import get_random_secret_key
  secret_key = get_random_secret_key()
  print(secret_key)

  Copy and paste that secret key in .env


4. Set up the database:

- Create a PostgreSQL database.
- Update the database settings in `.env file`

5. Apply the migrations:

-python manage.py makemigrations
-python manage.py migrate


6. Start the server:

-python manage.py runserver



7. The API is now accessible to `http://localhost:8000/`.

## API Endpoints

The following API endpoints are available:

- `GET /api/practitioners/`: Retrieve list of all practitioners.
- `POST /api/practitioners/`: Create a new practitioner along with qualifications and communications.
- `GET /api/practitioners/<id>/`: Retrieve details of a specific practitioner.

## Using Postman

To test the API endpoints using Postman:

1. Open Postman.
2. Set the HTTP method (GET, POST, etc.) and enter the API endpoint URL.
3. Set the request headers, if required.
4. Set the request body with the necessary data in JSON format.
5. Click the "Send" button to make the request.

## Examples

Here are some examples of requests using Postman:

1. Create a new practitioner:

- Method: POST
- URL: `http://localhost:8000/api/practitioners/`
- Headers: Content-Type: application/json
- Body (raw JSON):
  ```json
  {
  "active": true,
  "name": "Prabin",
  "telecom": "prabin@gmail.com",
  "address": "Kathmandu",
  "gender": "male",
  "birth_date": "1990-01-01",
  "qualifications": [
    {
      "code": "BACHELOR",
      "period_start": "2016-01-01",
      "period_end": "2020-10-10",
      "issuer": "TU"
    }
  ],
  "communications": [
    {
      "language": "English",
      "preferred": true
    },
    {
      "language": "Chinese",
      "preferred": false
    }
  ]
}

  ```

2. Retrieve details of a practitioner:

- Method: GET
- URL: `http://localhost:8000/api/practitioners/<id>/`

=







